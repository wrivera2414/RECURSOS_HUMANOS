package com.rrhh.uth.views.planilla;

import com.rrhh.uth.data.entity.Empleado;
import com.rrhh.uth.views.MainLayout;
import com.vaadin.flow.component.Component;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.checkbox.Checkbox;
import com.vaadin.flow.component.combobox.MultiSelectComboBox;
import com.vaadin.flow.component.html.*;
import com.vaadin.flow.component.icon.Icon;
import com.vaadin.flow.component.icon.VaadinIcon;
import com.vaadin.flow.component.datepicker.*;
import com.vaadin.flow.component.textfield.NumberField;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.router.PageTitle;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.theme.lumo.LumoUtility.AlignItems;
import com.vaadin.flow.theme.lumo.LumoUtility.Background;
import com.vaadin.flow.theme.lumo.LumoUtility.BorderRadius;
import com.vaadin.flow.theme.lumo.LumoUtility.BoxSizing;
import com.vaadin.flow.theme.lumo.LumoUtility.Display;
import com.vaadin.flow.theme.lumo.LumoUtility.Flex;
import com.vaadin.flow.theme.lumo.LumoUtility.FlexDirection;
import com.vaadin.flow.theme.lumo.LumoUtility.FontSize;
import com.vaadin.flow.theme.lumo.LumoUtility.Gap;
import com.vaadin.flow.theme.lumo.LumoUtility.Height;
import com.vaadin.flow.theme.lumo.LumoUtility.JustifyContent;
import com.vaadin.flow.theme.lumo.LumoUtility.ListStyleType;
import com.vaadin.flow.theme.lumo.LumoUtility.Margin;
import com.vaadin.flow.theme.lumo.LumoUtility.MaxWidth;
import com.vaadin.flow.theme.lumo.LumoUtility.Padding;
import com.vaadin.flow.theme.lumo.LumoUtility.Position;
import com.vaadin.flow.theme.lumo.LumoUtility.TextColor;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.ArrayList;

import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

@PageTitle("Planilla")
@Route(value = "Planilla", layout = MainLayout.class)
public class PlanillaView extends Div {
	
	List<Empleado> empleadoSeleccionado;
	UnorderedList ul;

    public PlanillaView() {
        addClassNames("planilla-view");
        addClassNames(Display.FLEX, FlexDirection.COLUMN, Height.FULL);

        Main content = new Main();
        content.addClassNames(Display.GRID, Gap.XLARGE, AlignItems.START, JustifyContent.CENTER, MaxWidth.SCREEN_MEDIUM,
                Margin.Horizontal.AUTO, Padding.Bottom.LARGE, Padding.Horizontal.LARGE);

        content.add(createCheckoutForm());
        content.add(createAside());
        add(content);
    }

    private Component createCheckoutForm() {
        Section checkoutForm = new Section();
        checkoutForm.addClassNames(Display.FLEX, FlexDirection.COLUMN, Flex.GROW);

        H2 header = new H2("Crear Planillas De Pago Empleado");
        header.addClassNames(Margin.Bottom.NONE, Margin.Top.XLARGE, FontSize.XXLARGE);
        checkoutForm.add(header);
        
        MultiSelectComboBox<Empleado> empleados = new MultiSelectComboBox<>("Empleados");
        List<Empleado> ListaEmpleados = new ArrayList<>(); 
        ListaEmpleados = ObtenerEmpleados();
        empleados.setItems(ListaEmpleados);
        empleados.setItemLabelGenerator(Empleado::getNombre);
        
        empleados.addValueChangeListener(e -> {
            empleadoSeleccionado.clear();
            e.getValue().forEach(em -> {
            	empleadoSeleccionado.add(em);
            });
            
           });
        
        checkoutForm.add(header,empleados);
        checkoutForm.add(createPlanillaDetailsSection());
        checkoutForm.add(new Hr());
        checkoutForm.add(createFooter());

        return checkoutForm;
    }

    private List<Empleado> ObtenerEmpleados() {
    	List<Empleado> ListaEmpleados = new ArrayList<>();
    	Empleado e1 = new Empleado();
    	e1.setNombre("Luis Perez");
    	e1.setIdentidad("183314936318");
    	e1.setSuueldo(11000);
    	
    	Empleado e2 = new Empleado();
    	e1.setNombre("David Lopez");
    	e1.setIdentidad("183318863458");
    	e1.setSuueldo(19000);
  
    	Empleado e3 = new Empleado();
    	e1.setNombre("Javier Fajardo");
    	e1.setIdentidad("183318863248");
    	e1.setSuueldo(35000);
  
    	Empleado e4 = new Empleado();
    	e1.setNombre("Israel Ventura");
    	e1.setIdentidad("183318678918");
    	e1.setSuueldo(15000);
  
    	Empleado e5 = new Empleado();
    	e1.setNombre("Martin Posas");
    	e1.setIdentidad("18331883418");
    	e1.setSuueldo(12000);
  
    	
    	ListaEmpleados.add(e1);
    	ListaEmpleados.add(e2);
    	ListaEmpleados.add(e3);
    	ListaEmpleados.add(e4);
    	ListaEmpleados.add(e5);
    	
    	return ListaEmpleados;
	}

	private Section createPlanillaDetailsSection() {
        Section PlanillaDetails = new Section();
        PlanillaDetails.addClassNames(Display.FLEX, FlexDirection.COLUMN, Margin.Bottom.XLARGE, Margin.Top.MEDIUM);
        

        H3 header = new H3("Detalle de pago de Planilla");
        header.addClassNames(Margin.Bottom.MEDIUM, Margin.Top.SMALL, FontSize.LARGE);

        TextField nombre = new TextField("Nombre");
        nombre.setRequiredIndicatorVisible(true);
        nombre.setPattern("[\\p{L} \\-]+");
        nombre.addClassNames(Margin.Bottom.SMALL);
        
        DatePicker fecha = new DatePicker("Fecha");
        fecha.setReadOnly(true);
        fecha.setValue(LocalDate.now());
        fecha.addClassName(Margin.Bottom.SMALL);
        
        NumberField total = new NumberField();
        total.setLabel("Total");
        total.setValue(0.0);
        total.setReadOnly(true);
        Div LempiraPrefix = new Div();
        LempiraPrefix.setText("L");
        total.setPrefixComponent(LempiraPrefix);
        
        
        Checkbox rememberDetails = new Checkbox("Confirmar Pago");
        rememberDetails.addClassNames(Margin.Top.SMALL);
        //personalDetails.add(stepOne, header, name, email, phone, rememberDetails);
        PlanillaDetails.add( header, nombre, fecha, total, rememberDetails);
        return PlanillaDetails;
    }

    private Footer createFooter() {
        Footer footer = new Footer();
        footer.addClassNames(Display.FLEX, AlignItems.CENTER, JustifyContent.BETWEEN, Margin.Vertical.MEDIUM);

        Button cancel = new Button("Restablecer");
        cancel.addThemeVariants(ButtonVariant.LUMO_TERTIARY);

        Button pay = new Button("Pagar Planilla", new Icon(VaadinIcon.LOCK));
        pay.addThemeVariants(ButtonVariant.LUMO_PRIMARY, ButtonVariant.LUMO_SUCCESS);

        footer.add(cancel, pay);
        return footer;
    }

    private Aside createAside() {
        Aside aside = new Aside();
        aside.addClassNames(Background.CONTRAST_5, BoxSizing.BORDER, Padding.LARGE, BorderRadius.LARGE,
                Position.STICKY);
        Header headerSection = new Header();
        headerSection.addClassNames(Display.FLEX, AlignItems.CENTER, JustifyContent.BETWEEN, Margin.Bottom.MEDIUM);
        H3 header = new H3("Detalle de pago");
        header.addClassNames(Margin.NONE);
        Button edit = new Button("Edit");
        edit.addThemeVariants(ButtonVariant.LUMO_TERTIARY_INLINE);
        headerSection.add(header, edit);

        ul = new UnorderedList();
        ul.addClassNames(ListStyleType.NONE, Margin.NONE, Padding.NONE, Display.FLEX, FlexDirection.COLUMN, Gap.MEDIUM);
        empleadoSeleccionado.forEach(em -> 
        {
        	ul.add(createListItem(em.getNombre(), em.getIdentidad(), "L" + em.getSuueldo()));
        });
        aside.add(headerSection, ul);
        return aside;
    }

    private ListItem createListItem(String primary, String secondary, String price) {
        ListItem item = new ListItem();
        item.addClassNames(Display.FLEX, JustifyContent.BETWEEN);

        Div subSection = new Div();
        subSection.addClassNames(Display.FLEX, FlexDirection.COLUMN);

        subSection.add(new Span(primary));
        Span secondarySpan = new Span(secondary);
        secondarySpan.addClassNames(FontSize.SMALL, TextColor.SECONDARY);
        subSection.add(secondarySpan);

        Span priceSpan = new Span(price);

        item.add(subSection, priceSpan);
        return item;
    }
}
